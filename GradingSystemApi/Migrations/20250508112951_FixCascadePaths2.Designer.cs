// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Team_Yeri_enrollment_system.GradingLibrary.Data;

#nullable disable

namespace GradingSystemApi.Migrations
{
    [DbContext(typeof(enrollmentDbContext))]
    [Migration("20250508112951_FixCascadePaths2")]
    partial class FixCascadePaths2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GradingSystemApi.Models.Entities.Enrollment", b =>
                {
                    b.Property<int>("enrollmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("enrollmentID"));

                    b.Property<int>("courseID")
                        .HasColumnType("int");

                    b.Property<string>("enrollmentStatus")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<int>("studentID")
                        .HasColumnType("int");

                    b.Property<int>("termID")
                        .HasColumnType("int");

                    b.HasKey("enrollmentID");

                    b.HasIndex("courseID");

                    b.HasIndex("studentID");

                    b.HasIndex("termID")
                        .IsUnique();

                    b.ToTable("Enrollments");
                });

            modelBuilder.Entity("GradingSystemApi.Models.Entities.Grades", b =>
                {
                    b.Property<int>("gradeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("gradeID"));

                    b.Property<decimal>("Score")
                        .HasColumnType("decimal(5,2)");

                    b.Property<string>("assesmentType")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int>("classID")
                        .HasColumnType("int");

                    b.Property<int>("studentID")
                        .HasColumnType("int");

                    b.Property<string>("subjectCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("termID")
                        .HasColumnType("int");

                    b.HasKey("gradeID");

                    b.HasIndex("classID");

                    b.HasIndex("studentID");

                    b.HasIndex("subjectCode");

                    b.HasIndex("termID");

                    b.ToTable("Grades");
                });

            modelBuilder.Entity("GradingSystemApi.Models.Entities.Students", b =>
                {
                    b.Property<int>("studentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("studentID"));

                    b.Property<DateOnly>("BirthDate")
                        .HasColumnType("date");

                    b.Property<string>("Gmail")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.HasKey("studentID");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("GradingSystemApi.Models.Entities.Subject", b =>
                {
                    b.Property<string>("subjectCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("subjectName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("totalUnits")
                        .HasMaxLength(100)
                        .HasColumnType("int");

                    b.HasKey("subjectCode");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("GradingSystemApi.Models.Entities.Teacher", b =>
                {
                    b.Property<int>("teacherID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("teacherID"));

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Gmail")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("firstName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("lastname")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("phoneNumber")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("teacherID");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("GradingSystemApi.Models.Entities.Terms", b =>
                {
                    b.Property<int>("Term_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Term_ID"));

                    b.Property<DateOnly>("Academic_Year")
                        .HasColumnType("date");

                    b.Property<string>("Term_Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("Term_ID");

                    b.ToTable("Terms");
                });

            modelBuilder.Entity("GradingSystemApi.Models.Entities.courseSubject", b =>
                {
                    b.Property<string>("courseSubjectID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("courseID")
                        .HasColumnType("int");

                    b.Property<int>("subjectCode")
                        .HasColumnType("int");

                    b.Property<string>("subjectCode1")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("courseSubjectID");

                    b.HasIndex("courseID");

                    b.HasIndex("subjectCode1");

                    b.ToTable("CourseSubjects");
                });

            modelBuilder.Entity("GradingSystemApi.Models.Entities.teacherSubject", b =>
                {
                    b.Property<int>("teacherSubjectID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("teacherSubjectID"));

                    b.Property<string>("subjectCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("teacherID")
                        .HasColumnType("int");

                    b.HasKey("teacherSubjectID");

                    b.HasIndex("subjectCode");

                    b.HasIndex("teacherID")
                        .IsUnique();

                    b.ToTable("TeacherSubjects");
                });

            modelBuilder.Entity("Team_Yeri_enrollment_system.GradingLibrary.Models.Classes", b =>
                {
                    b.Property<int>("classID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("classID"));

                    b.Property<string>("Schedule")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("subjectCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("teacherID")
                        .HasColumnType("int");

                    b.HasKey("classID");

                    b.HasIndex("subjectCode");

                    b.HasIndex("teacherID");

                    b.ToTable("Classes");
                });

            modelBuilder.Entity("Team_Yeri_enrollment_system.GradingLibrary.Models.Course", b =>
                {
                    b.Property<int>("courseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("courseID"));

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("courseName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("totalUnits")
                        .HasMaxLength(500)
                        .HasColumnType("int");

                    b.HasKey("courseID");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("GradingSystemApi.Models.Entities.Enrollment", b =>
                {
                    b.HasOne("Team_Yeri_enrollment_system.GradingLibrary.Models.Course", "Course")
                        .WithMany()
                        .HasForeignKey("courseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GradingSystemApi.Models.Entities.Students", "Student")
                        .WithMany("Enrollments")
                        .HasForeignKey("studentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GradingSystemApi.Models.Entities.Terms", "Term")
                        .WithOne("Enrollment")
                        .HasForeignKey("GradingSystemApi.Models.Entities.Enrollment", "termID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");

                    b.Navigation("Term");
                });

            modelBuilder.Entity("GradingSystemApi.Models.Entities.Grades", b =>
                {
                    b.HasOne("Team_Yeri_enrollment_system.GradingLibrary.Models.Classes", "Class")
                        .WithMany()
                        .HasForeignKey("classID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GradingSystemApi.Models.Entities.Students", "Student")
                        .WithMany("Grades")
                        .HasForeignKey("studentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GradingSystemApi.Models.Entities.Subject", "Subject")
                        .WithMany("Grades")
                        .HasForeignKey("subjectCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GradingSystemApi.Models.Entities.Terms", "Term")
                        .WithMany("Grades")
                        .HasForeignKey("termID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Class");

                    b.Navigation("Student");

                    b.Navigation("Subject");

                    b.Navigation("Term");
                });

            modelBuilder.Entity("GradingSystemApi.Models.Entities.courseSubject", b =>
                {
                    b.HasOne("Team_Yeri_enrollment_system.GradingLibrary.Models.Course", "Course")
                        .WithMany("CourseSubjects")
                        .HasForeignKey("courseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GradingSystemApi.Models.Entities.Subject", "Subject")
                        .WithMany("CourseSubjects")
                        .HasForeignKey("subjectCode1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("GradingSystemApi.Models.Entities.teacherSubject", b =>
                {
                    b.HasOne("GradingSystemApi.Models.Entities.Subject", "Subject")
                        .WithMany("TeacherSubjects")
                        .HasForeignKey("subjectCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GradingSystemApi.Models.Entities.Teacher", "Teacher")
                        .WithOne("teacherSubject")
                        .HasForeignKey("GradingSystemApi.Models.Entities.teacherSubject", "teacherID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subject");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("Team_Yeri_enrollment_system.GradingLibrary.Models.Classes", b =>
                {
                    b.HasOne("GradingSystemApi.Models.Entities.Subject", "Subject")
                        .WithMany("Classes")
                        .HasForeignKey("subjectCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GradingSystemApi.Models.Entities.Teacher", "Teacher")
                        .WithMany("Classes")
                        .HasForeignKey("teacherID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subject");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("GradingSystemApi.Models.Entities.Students", b =>
                {
                    b.Navigation("Enrollments");

                    b.Navigation("Grades");
                });

            modelBuilder.Entity("GradingSystemApi.Models.Entities.Subject", b =>
                {
                    b.Navigation("Classes");

                    b.Navigation("CourseSubjects");

                    b.Navigation("Grades");

                    b.Navigation("TeacherSubjects");
                });

            modelBuilder.Entity("GradingSystemApi.Models.Entities.Teacher", b =>
                {
                    b.Navigation("Classes");

                    b.Navigation("teacherSubject")
                        .IsRequired();
                });

            modelBuilder.Entity("GradingSystemApi.Models.Entities.Terms", b =>
                {
                    b.Navigation("Enrollment")
                        .IsRequired();

                    b.Navigation("Grades");
                });

            modelBuilder.Entity("Team_Yeri_enrollment_system.GradingLibrary.Models.Course", b =>
                {
                    b.Navigation("CourseSubjects");
                });
#pragma warning restore 612, 618
        }
    }
}
