// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Team_Yeri_enrollment_system.GradingLibrary.Data;

#nullable disable

namespace GradingSystemApi.Migrations
{
    [DbContext(typeof(EnrollmentDbContext))]
    [Migration("20250503092338_initial migration")]
    partial class initialmigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Team_Yeri_enrollment_system.GradingLibrary.Models.Classes", b =>
                {
                    b.Property<int>("Class_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Class_ID"));

                    b.Property<string>("Schedule")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject_Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Teacher_ID")
                        .HasColumnType("int");

                    b.HasKey("Class_ID");

                    b.ToTable("Classes");
                });

            modelBuilder.Entity("Team_Yeri_enrollment_system.GradingLibrary.Models.Course", b =>
                {
                    b.Property<int>("Course_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Course_ID"));

                    b.Property<string>("Course_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Total_Units")
                        .HasColumnType("int");

                    b.HasKey("Course_ID");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("Team_Yeri_enrollment_system.GradingLibrary.Models.Course_Subject", b =>
                {
                    b.Property<int>("Course_Subject_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Course_Subject_ID"));

                    b.Property<int>("Course_ID")
                        .HasColumnType("int");

                    b.Property<int>("Subject_Code")
                        .HasColumnType("int");

                    b.HasKey("Course_Subject_ID");

                    b.ToTable("CourseSubjects");
                });

            modelBuilder.Entity("Team_Yeri_enrollment_system.GradingLibrary.Models.Enrollment", b =>
                {
                    b.Property<int>("Enrollment_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Enrollment_ID"));

                    b.Property<int>("Course_ID")
                        .HasColumnType("int");

                    b.Property<string>("Enrollment_status")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<int>("Student_ID")
                        .HasColumnType("int");

                    b.Property<int>("Term_ID")
                        .HasColumnType("int");

                    b.HasKey("Enrollment_ID");

                    b.ToTable("Enrollments");
                });

            modelBuilder.Entity("Team_Yeri_enrollment_system.GradingLibrary.Models.Grades", b =>
                {
                    b.Property<int>("Grade_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Grade_ID"));

                    b.Property<string>("Assessment_type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Class_ID")
                        .HasColumnType("int");

                    b.Property<decimal>("Score")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Student_ID")
                        .HasColumnType("int");

                    b.Property<string>("Subject_Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Term_ID")
                        .HasColumnType("int");

                    b.HasKey("Grade_ID");

                    b.ToTable("Grades");
                });

            modelBuilder.Entity("Team_Yeri_enrollment_system.GradingLibrary.Models.Students", b =>
                {
                    b.Property<int>("Student_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Student_ID"));

                    b.Property<DateOnly>("BirthDate")
                        .HasMaxLength(123)
                        .HasColumnType("date");

                    b.Property<string>("Gmail")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.HasKey("Student_ID");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("Team_Yeri_enrollment_system.GradingLibrary.Models.Subject", b =>
                {
                    b.Property<string>("Subject_Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Subject_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Units")
                        .HasColumnType("int");

                    b.HasKey("Subject_Code");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("Team_Yeri_enrollment_system.GradingLibrary.Models.Teacher", b =>
                {
                    b.Property<string>("Teacher_ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("First_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Last_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone_Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Teacher_ID");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("Team_Yeri_enrollment_system.GradingLibrary.Models.Teacher_Subject", b =>
                {
                    b.Property<int>("Teacher_Subject_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Teacher_Subject_ID"));

                    b.Property<int>("Subject_Code")
                        .HasColumnType("int");

                    b.Property<int>("Teacher_ID")
                        .HasColumnType("int");

                    b.HasKey("Teacher_Subject_ID");

                    b.ToTable("TeacherSubjects");
                });

            modelBuilder.Entity("Team_Yeri_enrollment_system.GradingLibrary.Models.Terms", b =>
                {
                    b.Property<int>("Term_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Term_ID"));

                    b.Property<DateOnly>("Academic_Year")
                        .HasColumnType("date");

                    b.Property<string>("Term_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Term_ID");

                    b.ToTable("Terms");
                });
#pragma warning restore 612, 618
        }
    }
}
